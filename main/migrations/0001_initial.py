# Generated by Django 5.1.6 on 2025-07-02 11:43

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EduModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=200)),
                ('address', models.CharField(blank=True, max_length=250, null=True)),
                ('phone', models.CharField(max_length=255)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='edu_logo/')),
            ],
            options={
                'verbose_name': 'Markaz',
                'verbose_name_plural': 'Markazlar',
            },
        ),
        migrations.CreateModel(
            name='PaymentTypeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': "To'lov turi",
                'verbose_name_plural': "To'lov turlari",
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('education_center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.edumodel')),
            ],
            options={
                'verbose_name': 'Foydalanuvchi',
                'verbose_name_plural': 'Foydalanuvchilar',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='GroupInfoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('start_time', models.DateField()),
                ('end_time', models.DateField()),
                ('price', models.PositiveIntegerField(blank=True, null=True)),
                ('education_center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.edumodel')),
            ],
            options={
                'verbose_name': 'Guruh ma’lumoti',
                'verbose_name_plural': 'Guruhlar ma’lumotlari',
            },
        ),
        migrations.CreateModel(
            name='GroupModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('group_info', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.groupinfomodel')),
            ],
            options={
                'verbose_name': 'Guruh a’zosi',
                'verbose_name_plural': 'Guruhdagi o‘quvchilar',
            },
        ),
        migrations.CreateModel(
            name='LessonPlanModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=255)),
                ('lesson_number', models.PositiveIntegerField()),
                ('scheduled_date', models.DateField()),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.groupinfomodel')),
            ],
            options={
                'verbose_name': 'Dars rejasi',
                'verbose_name_plural': 'Dars rejalari',
                'ordering': ['lesson_number'],
                'unique_together': {('group', 'lesson_number')},
            },
        ),
        migrations.CreateModel(
            name='SpecialityModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('education_center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.edumodel')),
            ],
            options={
                'verbose_name': 'Xodim mutaxasisligi',
                'verbose_name_plural': 'Xodimlar mutaxasisliglari',
            },
        ),
        migrations.CreateModel(
            name='StaffModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('third_name', models.CharField(max_length=150)),
                ('phone_number', models.CharField(max_length=13)),
                ('bio', models.TextField(blank=True, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Erkak'), ('FEMALE', 'Ayol')], max_length=100, null=True)),
                ('experience', models.PositiveIntegerField()),
                ('role', models.CharField(choices=[('teacher', 'Teacher'), ('admin', 'Admin'), ('manager', 'Manager')], max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('salary', models.IntegerField(choices=[(1, 'monthly'), (2, 'workly'), (3, 'daily')])),
                ('salary_amount', models.DecimalField(decimal_places=2, default=0, max_digits=25)),
                ('education_center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.edumodel')),
                ('profile', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('staff_speciality', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.specialitymodel')),
            ],
            options={
                'verbose_name': 'Xodim',
                'verbose_name_plural': 'Xodimlar',
            },
        ),
        migrations.CreateModel(
            name='StaffFine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=25)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.staffmodel')),
            ],
            options={
                'verbose_name': 'Xodim qarz',
                'verbose_name_plural': 'Xodim qarzlar',
            },
        ),
        migrations.CreateModel(
            name='MakeStaffSalary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=25)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.staffmodel')),
            ],
            options={
                'verbose_name': 'Maosh',
                'verbose_name_plural': 'Maoshlar',
            },
        ),
        migrations.CreateModel(
            name='HomeworkModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('attachment', models.FileField(blank=True, help_text='PDF, Word hujjat yoki rasm yuklashingiz mumkin. Majburiy emas.', null=True, upload_to='media/homework_attachments/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png', 'txt'])])),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.lessonplanmodel')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.staffmodel')),
            ],
            options={
                'verbose_name': 'Uyga vazifa',
                'verbose_name_plural': 'Uyga vazifalar',
            },
        ),
        migrations.AddField(
            model_name='groupinfomodel',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.staffmodel'),
        ),
        migrations.CreateModel(
            name='GiveStaffSalary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=25)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('payment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.paymenttypemodel')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.staffmodel')),
            ],
            options={
                'verbose_name': 'Maosh berish',
                'verbose_name_plural': 'Maosh berishlar',
            },
        ),
        migrations.CreateModel(
            name='StudentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('third_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=13)),
                ('data_birth', models.DateField()),
                ('bio', models.TextField()),
                ('education_center', models.ManyToManyField(to='main.edumodel')),
            ],
            options={
                'verbose_name': 'O‘quvchi',
                'verbose_name_plural': 'O‘quvchilar',
            },
        ),
        migrations.CreateModel(
            name='PaymentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid_at', models.DateField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.groupmodel')),
                ('payment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.paymenttypemodel')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.studentmodel')),
            ],
            options={
                'verbose_name': 'To‘lov',
                'verbose_name_plural': 'To‘lovlar',
            },
        ),
        migrations.AddField(
            model_name='groupmodel',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.studentmodel'),
        ),
        migrations.CreateModel(
            name='SubscriptionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('duration', models.IntegerField(default=0)),
                ('staff_quantity', models.IntegerField(default=1)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('education_center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.edumodel')),
            ],
            options={
                'verbose_name': 'Obuna xizmati',
                'verbose_name_plural': 'Obuna xizmatlari',
            },
        ),
        migrations.CreateModel(
            name='ScheduleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('day_of_week', models.CharField(choices=[('monday', 'Dushanba'), ('tuesday', 'Seshanba'), ('wednesday', 'Chorshanba'), ('thursday', 'Payshanba'), ('friday', 'Juma'), ('saturday', 'Shanba'), ('sunday', 'Yakshanba')], max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='schedule', to='main.groupinfomodel')),
            ],
            options={
                'verbose_name': 'Dars kuni',
                'verbose_name_plural': 'Dars kunlari',
                'unique_together': {('group', 'day_of_week')},
            },
        ),
        migrations.CreateModel(
            name='StudentHomeworkModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('submitted_text', models.TextField(blank=True, null=True)),
                ('submitted_file', models.FileField(blank=True, null=True, upload_to='media/homeworks/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'txt', 'jpeg', 'png'])])),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('mark', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('teacher_comment', models.TextField(blank=True, null=True)),
                ('homework', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.homeworkmodel')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.studentmodel')),
            ],
            options={
                'verbose_name': 'Topshirilgan vazifa',
                'verbose_name_plural': 'Topshirilgan vazifalar',
                'unique_together': {('homework', 'student')},
            },
        ),
        migrations.CreateModel(
            name='AttendanceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_present', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.lessonplanmodel')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.studentmodel')),
            ],
            options={
                'verbose_name': 'Davomat',
                'verbose_name_plural': 'Davomatlar',
                'unique_together': {('lesson', 'student')},
            },
        ),
    ]
